name: "Merge to main (Staging)"

on:
  push:
    branches:
      - main
    paths:
      - "aws/**"
      - "env/staging/**"
      - ".github/workflows/merge_to_main_staging.yml"

defaults:
  run:
    shell: bash

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ca-central-1
  TERRAFORM_VERSION: 0.14.4
  TERRAGRUNT_VERSION: v0.26.0
  TF_VAR_rds_cluster_password: ${{ secrets.STAGING_RDS_CLUSTER_PASSWORD }}
  TF_VAR_cloudwatch_slack_webhook_warning_topic: ${{ secrets.STAGING_CLOUDWATCH_SLACK_WEBHOOK }}
  TF_VAR_cloudwatch_slack_webhook_critical_topic: ${{ secrets.STAGING_CLOUDWATCH_SLACK_WEBHOOK }}
  TF_VAR_cloudwatch_slack_webhook_general_topic: ${{ secrets.STAGING_CLOUDWATCH_SLACK_WEBHOOK }}
  TF_VAR_slack_channel_warning_topic: "notification-staging-ops"
  TF_VAR_slack_channel_critical_topic: "notification-staging-ops"
  TF_VAR_slack_channel_general_topic: "notification-staging-ops"
  TF_VAR_admin_client_secret: ${{ secrets.STAGING_ADMIN_CLIENT_SECRET }}
  TF_VAR_admin_client_user_name: ${{ secrets.STAGING_ADMIN_CLIENT_USER_NAME }}
  TF_VAR_api_host_name: ${{ secrets.STAGING_API_HOST_NAME }}
  TF_VAR_asset_domain: ${{ secrets.STAGING_ASSET_DOMAIN }}
  TF_VAR_asset_upload_bucket_name: ${{ secrets.STAGING_ASSET_UPLOAD_BUCKET_NAME }}
  TF_VAR_auth_tokens: ${{ secrets.STAGING_AUTH_TOKENS }}
  TF_VAR_base_domain: ${{ secrets.STAGING_BASE_DOMAIN }}
  TF_VAR_csv_upload_bucket_name: ${{ secrets.STAGING_CSV_UPLOAD_BUCKET_NAME }}
  TF_VAR_dangerous_salt: ${{ secrets.STAGING_DANGEROUS_SALT }}
  TF_VAR_documents_bucket: ${{ secrets.STAGING_DOCUMENTS_BUCKET }}
  TF_VAR_mlwr_host: False
  TF_VAR_notification_queue_prefix: eks-notification-canada-ca
  TF_VAR_redis_url: ${{ secrets.STAGING_REDIS_URL }}
  TF_VAR_secret_key: ${{ secrets.STAGING_SECRET_KEY }}
  TF_VAR_sqlalchemy_database_reader_uri: ${{ secrets.STAGING_SQLALCHEMY_DATABASE_READER_URI }}
  TF_VAR_sqlalchemy_database_uri: ${{ secrets.STAGING_SQLALCHEMY_DATABASE_URI }}
  TF_VAR_eks_cluster_securitygroup: ${{ secrets.STAGING_EKS_CLUSTER_SECURITY_GROUP }}
  TF_VAR_document_download_api_host: ${{ secrets.STAGING_DOCUMENT_DOWNLOAD_API_HOST }}

jobs:
  terraform-apply:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Fetches entire history, so we can analyze commits since last tag
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Setup Terragrunt
        run: |
          mkdir bin
          wget -O bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/$TERRAGRUNT_VERSION/terragrunt_linux_amd64
          chmod +x bin/terragrunt
          echo "bin" >> $GITHUB_PATH

      - name: Get changed files
        id: changed-files
        uses: jitterbit/get-changed-files@v1
        with:
          format: 'json'

      - name: Get touched Terragrunt modules
        run: |
          MODULES=`echo '${{ steps.changed-files.outputs.added_modified }}' | jq -c '[.[] | match("(.*aws?)\/(.*)\/").captures[1].string] | unique | select(length > 0)'`
          echo "MODULES=$MODULES" >> $GITHUB_ENV

      - name: Get touched Terragrunt configurations
        run: |
          CONFIGS=`echo '${{ steps.changed-files.outputs.added_modified }}' | jq -c '[.[] | match("(.*env?)\/(.*staging?)\/(.*)\/").captures[2].string] | unique | select(length > 0)'`
          echo "CONFIGS=$CONFIGS" >> $GITHUB_ENV

      - name: Apply aws/common
        run: |
          cd env/staging/common
          ../../../bin/terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply aws/dns
        run: |
          cd env/staging/dns
          ../../../bin/terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply aws/eks
        run: |
          cd env/staging/eks
          ../../../bin/terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply aws/elasticache
        run: |
          cd env/staging/elasticache
          ../../../bin/terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply aws/rds
        run: |
          cd env/staging/rds
          ../../../bin/terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply aws/cloudfront
        run: |
          cd env/staging/cloudfront
          ../../../bin/terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply aws/lambda-api
        run: |
          cd env/staging/lambda-api
          ../../../bin/terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Bump version and push tag
        uses: mathieudutour/github-tag-action@v4.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
