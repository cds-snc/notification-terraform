name: "Terragrunt plan PRODUCTION"

on:
  workflow_dispatch:
  pull_request:
    paths:
      - ".github/workflows/infrastructure_version.txt"

permissions:
  id-token: write
  contents: write
  pull-requests: write

env:
  ENVIRONMENT: production
  ACCOUNT_ID: ${{ secrets.PRODUCTION_AWS_ACCOUNT_ID }}
  AWS_REGION: ca-central-1
  OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN_PRODUCTION }}
  WORKFLOW: true

jobs:
  terragrunt-plan-common:
    runs-on: ubuntu-latest  
    env:
      COMPONENT: "common"
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"      
          terraform-init: |
            -upgrade   

  terragrunt-plan-ecr:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest 
    env:
      COMPONENT: "ecr" 
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws
          cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"     
          terraform-init: |
            -upgrade

  terragrunt-plan-ecr-us-east:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest 
    env:
      COMPONENT: "ecr-us-east" 
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws
          cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"     
          terraform-init: |
            -upgrade

  terragrunt-plan-ses_receiving_emails:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest  
    env:
      COMPONENT: "ses_receiving_emails"
    needs: [terragrunt-plan-common,terragrunt-plan-ecr,terragrunt-plan-ecr-us-east]
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"     
          terraform-init: |
            -upgrade

  terragrunt-plan-dns:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest  
    env:
      COMPONENT: "dns"
    needs: [terragrunt-plan-common,terragrunt-plan-ses_receiving_emails]
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"     
          terraform-init: |
            -upgrade

  terragrunt-plan-ses_validation_dns_entries:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest  
    env:
      COMPONENT: "ses_validation_dns_entries"
    needs: [terragrunt-plan-common,terragrunt-plan-dns]
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"     
          terraform-init: |
            -upgrade

  terragrunt-plan-cloudfront:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest  
    needs: [terragrunt-plan-common]
    env:
      COMPONENT: "cloudfront"
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
          terraform-init: |
            -upgrade

  terragrunt-plan-eks:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest  
    needs: [terragrunt-plan-common,terragrunt-plan-dns,terragrunt-plan-cloudfront]
    env:
      COMPONENT: "eks"
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
          terraform-init: |
            -upgrade

  terragrunt-plan-aws-auth:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest  
    needs: [terragrunt-plan-common,terragrunt-plan-dns,terragrunt-plan-cloudfront,terragrunt-plan-eks]
    env:
      COMPONENT: "aws-auth"
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan

      - name: Install sponge
        run: |
          sudo apt update
          sudo apt-get install -y moreutils

      - name: Install OpenVPN
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved

      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars    
              
      - name: Retrieve VPN Config
        run: |
          sudo mkdir -p aws
          cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars
          cd ../env/${{env.ENVIRONMENT}}/eks
          terragrunt init -upgrade
          ENDPOINT_ID=$(terragrunt output --raw gha_vpn_id)
          CERT=$(terragrunt output --raw gha_vpn_certificate)
          KEY=$(terragrunt output --raw gha_vpn_key)
          aws ec2 export-client-vpn-client-configuration --client-vpn-endpoint-id $ENDPOINT_ID --output text > /var/tmp/${{env.ENVIRONMENT}}.ovpn
          echo "<cert>
          $CERT
          </cert>" >> /var/tmp/${{env.ENVIRONMENT}}.ovpn
          echo "<key>
          $KEY
          </key>" >> /var/tmp/${{env.ENVIRONMENT}}.ovpn

      - name: Setup helmfile
        uses: mamezou-tech/setup-helmfile@03233e1cd9b19b2ba320e431f7bcc0618db4248d # v2.0.0
        with:
          install-kubectl: yes
          install-helm: yes       
          helmfile-version: "v0.151.0"
          
      - name: Connect to VPN
        uses: "kota65535/github-openvpn-connect-action@cd2ed8a90cc7b060dc4e001143e811b5f7ea0af5" # v3.1.0
        with:
          config_file: /var/tmp/${{env.ENVIRONMENT}}.ovpn
          echo_config: false            

      - name: Configure kubeconfig
        run: |
          aws eks update-kubeconfig --name notification-canada-ca-${{env.ENVIRONMENT}}-eks-cluster     
          kubectl config rename-context arn:aws:eks:ca-central-1:${{env.ACCOUNT_ID}}:cluster/notification-canada-ca-${{env.ENVIRONMENT}}-eks-cluster ${{env.ENVIRONMENT}}

      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
          terraform-init: |
            -upgrade

  terragrunt-plan-elasticache:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest  
    needs: [terragrunt-plan-common,terragrunt-plan-eks]
    env:
      COMPONENT: "elasticache"
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
          terraform-init: |
            -upgrade

  terragrunt-plan-rds:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest  
    needs: [terragrunt-plan-common,terragrunt-plan-eks]
    env:
      COMPONENT: "rds"
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
          terraform-init: |
            -upgrade

  terragrunt-plan-lambda-api:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest  
    needs: [terragrunt-plan-common,terragrunt-plan-eks,terragrunt-plan-ecr,terragrunt-plan-rds]
    env:
      COMPONENT: "lambda-api"
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
          terraform-init: |
            -upgrade

  terragrunt-plan-heartbeat:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest  
    needs: [terragrunt-plan-common,terragrunt-plan-ecr]
    env:
      COMPONENT: "heartbeat"
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
          terraform-init: |
            -upgrade

  terragrunt-plan-database-tools:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest  
    needs: [terragrunt-plan-common,terragrunt-plan-eks,terragrunt-plan-rds]
    env:
      COMPONENT: "database-tools"
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
          terraform-init: |
            -upgrade

  terragrunt-plan-quicksight:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest  
    needs: [terragrunt-plan-common,terragrunt-plan-eks,terragrunt-plan-rds]
    env:
      COMPONENT: "quicksight"
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
          terraform-init: |
            -upgrade

  terragrunt-plan-lambda-google-cidr:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest  
    needs: [terragrunt-plan-common,terragrunt-plan-eks,terragrunt-plan-ecr]
    env:
      COMPONENT: "lambda-google-cidr"
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
          terraform-init: |
            -upgrade

  terragrunt-plan-ses_to_sqs_email_callbacks:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest  
    needs: [terragrunt-plan-common,terragrunt-plan-ecr]
    env:
      COMPONENT: "ses_to_sqs_email_callbacks"
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
          terraform-init: |
            -upgrade

  terragrunt-plan-sns_to_sqs_sms_callbacks:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest  
    needs: [terragrunt-plan-common,terragrunt-plan-ecr]
    env:
      COMPONENT: "sns_to_sqs_sms_callbacks"
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
          terraform-init: |
            -upgrade

  terragrunt-plan-pinpoint_to_sqs_sms_callbacks:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest  
    needs: [terragrunt-plan-common,terragrunt-plan-ecr]
    env:
      COMPONENT: "pinpoint_to_sqs_sms_callbacks"
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
          terraform-init: |
            -upgrade

  terragrunt-plan-system_status:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest  
    needs: [terragrunt-plan-common,terragrunt-plan-ecr,terragrunt-plan-rds,terragrunt-plan-eks]
    env:
      COMPONENT: "system_status"
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
          terraform-init: |
            -upgrade

  terragrunt-plan-system_status_static_site:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    needs: [terragrunt-plan-common,terragrunt-plan-system_status]
    runs-on: ubuntu-latest  
    env:
      COMPONENT: "system_status_static_site"
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
          terraform-init: |
            -upgrade

  terragrunt-plan-newrelic:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    needs: [terragrunt-plan-common]
    runs-on: ubuntu-latest  
    env:
      COMPONENT: "newrelic"
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
          terraform-init: |
            -upgrade

  terragrunt-plan-manifest_secrets:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    needs: [terragrunt-plan-rds, terragrunt-plan-elasticache, terragrunt-plan-eks, terragrunt-plan-lambda-api, terragrunt-plan-heartbeat, terragrunt-plan-database-tools, terragrunt-plan-quicksight, terragrunt-plan-lambda-google-cidr, terragrunt-plan-ses_to_sqs_email_callbacks, terragrunt-plan-sns_to_sqs_sms_callbacks, terragrunt-plan-pinpoint_to_sqs_sms_callbacks, terragrunt-plan-system_status, terragrunt-plan-system_status_static_site, terragrunt-plan-newrelic]
    runs-on: ubuntu-latest  
    env:
      COMPONENT: "manifest_secrets"
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
          terraform-init: |
            -upgrade

  terragrunt-plan-github:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    needs: [terragrunt-plan-rds, terragrunt-plan-elasticache, terragrunt-plan-eks, terragrunt-plan-lambda-api, terragrunt-plan-heartbeat, terragrunt-plan-database-tools, terragrunt-plan-quicksight, terragrunt-plan-lambda-google-cidr, terragrunt-plan-ses_to_sqs_email_callbacks, terragrunt-plan-sns_to_sqs_sms_callbacks, terragrunt-plan-pinpoint_to_sqs_sms_callbacks, terragrunt-plan-system_status, terragrunt-plan-system_status_static_site, terragrunt-plan-newrelic]
    runs-on: ubuntu-latest  
    env:
      COMPONENT: "github"
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      - name: Install 1Pass CLI and Download TFVars
        run: |
          curl -o 1pass.deb https://downloads.1password.com/linux/debian/amd64/stable/1password-cli-amd64-latest.deb
          sudo dpkg -i 1pass.deb
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars          
      - name: Terragrunt plan ${{env.COMPONENT}}
        uses: cds-snc/terraform-plan@7f4ce4a4bdffaba639d32a45272804e37a569408 # v3.0.6
        with:
          directory: "env/${{env.ENVIRONMENT}}/${{env.COMPONENT}}"
          comment-delete: "true"
          comment-title: "${{env.ENVIRONMENT}}: ${{env.COMPONENT}}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
          terraform-init: |
            -upgrade            