name: "Terragrunt plan PRODUCTION"

on:
  workflow_dispatch:
  pull_request:
    paths:
      - ".github/workflows/infrastructure_version.txt"

permissions:
  id-token: write
  contents: write
  pull-requests: write

env:
  ENVIRONMENT: production
  ACCOUNT_ID: ${{ secrets.PRODUCTION_AWS_ACCOUNT_ID }}
  AWS_REGION: ca-central-1
  OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN_PRODUCTION }}
  WORKFLOW: true

jobs:

  terragrunt-plan-step-1:
      name: "${{ matrix.component }}"
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
        matrix:
          component: [common, ecr, ecr-us-east, newrelic]
          include:
            - component: common
            - component: ecr
            - component: ecr-us-east
            - component: newrelic
      env:
        COMPONENT: ${{ matrix.component }}
      steps:
      
        - name: Checkout
          uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

        # Cache Terraform providers to avoid repeated downloads
        - name: Cache Terraform providers
          uses: actions/cache@v4
          with:
            path: ${{ env.TF_PLUGIN_CACHE_DIR }}
            key: terraform-providers-${{ hashFiles('env/terragrunt.hcl', 'aws/**/.terraform.lock.hcl') }}
            restore-keys: |
              terraform-providers-

        # Cache Terragrunt dependencies
        - name: Cache Terragrunt cache
          uses: actions/cache@v4
          with:
            path: |
              ~/.terragrunt-cache
              .terragrunt-cache
            key: terragrunt-cache-${{ github.sha }}-${{ matrix.component }}
            restore-keys: |
              terragrunt-cache-${{ github.sha }}-
              terragrunt-cache-
        
        - name: Setup Terraform
          uses: ./.github/actions/setup-terraform
          with:
            role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
            role_session_name: NotifyTerraformPlan
        
        - name: Download TFVars
          run: |
            sudo mkdir -p aws && cd aws
            op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars
        
        - name: Terragrunt Plan
          id: tf-plan
          run: |
            cd env/${{env.ENVIRONMENT}}/${{ matrix.component }}
            terragrunt plan --terragrunt-non-interactive --no-color --log-custom-format "%msg" > /var/tmp/results.txt
            ${{ github.workspace }}/.github/scripts/extract_terraform_plan_enhanced.sh /var/tmp/results.txt -o /var/tmp/output.txt

            cat /var/tmp/output.txt

            echo 'plan<<EOF' >> $GITHUB_OUTPUT
            cat /var/tmp/output.txt >> $GITHUB_OUTPUT
            echo 'EOF' >> $GITHUB_OUTPUT

        - name: Comment on PR with plan output
          if: ${{ steps.tf-plan.outputs.plan != '' }}
          uses: mshick/add-pr-comment@b8f338c590a895d50bcbfa6c5859251edc8952fc # v2.8.2
          with:
            message-id: ${{ matrix.component }}_plan
            message: |
              # ${{env.ENVIRONMENT}}/${{ matrix.component }} Terragrunt Plan:
              ```shell
              ${{join(steps.tf-plan.outputs.plan, '\n')}}<|diff_marker|>
              ```

  terragrunt-plan-step-2:
    name: "${{ matrix.component }}"
    needs: 
      - terragrunt-plan-step-1
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        component: [cloudfront, heartbeat, pinpoint_to_sqs_sms_callbacks, ses_receiving_emails, ses_to_sqs_email_callbacks, sns_to_sqs_sms_callbacks]
        include:
          - component: cloudfront
          - component: heartbeat
          - component: pinpoint_to_sqs_sms_callbacks
          - component: ses_receiving_emails
          - component: ses_to_sqs_email_callbacks
          - component: sns_to_sqs_sms_callbacks
    env:
      COMPONENT: ${{ matrix.component }}
    steps:
      
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      # Cache Terraform providers
      - name: Cache Terraform providers
        uses: actions/cache@v4
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: terraform-providers-${{ hashFiles('env/terragrunt.hcl', 'aws/**/.terraform.lock.hcl') }}
          restore-keys: |
            terraform-providers-

      # Cache Terragrunt dependencies  
      - name: Cache Terragrunt cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.terragrunt-cache
            .terragrunt-cache
          key: terragrunt-cache-${{ github.sha }}-${{ matrix.component }}
          restore-keys: |
            terragrunt-cache-${{ github.sha }}-
            terragrunt-cache-
      
      - name: Setup Terraform
        uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      
      - name: Download TFVars
        run: |
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars

      - name: Terragrunt Plan
        id: tf-plan
        run: |
          cd env/${{env.ENVIRONMENT}}/${{ matrix.component }}
          terragrunt plan --terragrunt-non-interactive --no-color --log-custom-format "%msg" > /var/tmp/results.txt
          ${{ github.workspace }}/.github/scripts/extract_terraform_plan_enhanced.sh /var/tmp/results.txt -o /var/tmp/output.txt

          cat /var/tmp/output.txt

          echo 'plan<<EOF' >> $GITHUB_OUTPUT
          cat /var/tmp/output.txt >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Comment on PR with plan output
        if: ${{ steps.tf-plan.outputs.plan != '' }}
        uses: mshick/add-pr-comment@b8f338c590a895d50bcbfa6c5859251edc8952fc # v2.8.2
        with:
          message-id: ${{ matrix.component }}_plan
          message: |
            # ${{env.ENVIRONMENT}}/${{ matrix.component }} Terragrunt Plan:
            ```shell
            ${{join(steps.tf-plan.outputs.plan, '\n')}}
      

  terragrunt-plan-step-3:
    name: "${{ matrix.component }}"
    needs: 
      - terragrunt-plan-step-2
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        component: [dns]
        include:
          - component: dns
    env:
      COMPONENT: ${{ matrix.component }}
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      # Cache Terraform providers
      - name: Cache Terraform providers
        uses: actions/cache@v4
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: terraform-providers-${{ hashFiles('env/terragrunt.hcl', 'aws/**/.terraform.lock.hcl') }}
          restore-keys: |
            terraform-providers-

      # Cache Terragrunt dependencies and state
      - name: Cache Terragrunt cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.terragrunt-cache
            .terragrunt-cache
          key: terragrunt-cache-${{ github.sha }}-${{ matrix.component }}
          restore-keys: |
            terragrunt-cache-${{ github.sha }}-
            terragrunt-cache-
      
      - name: Setup Terraform
        uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      
      - name: Download TFVars
        run: |
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars
 
      - name: Terragrunt Plan
        id: tf-plan
        run: |
          cd env/${{env.ENVIRONMENT}}/${{ matrix.component }}
          terragrunt plan --terragrunt-non-interactive --no-color --log-custom-format "%msg" > /var/tmp/results.txt
          ${{ github.workspace }}/.github/scripts/extract_terraform_plan_enhanced.sh /var/tmp/results.txt -o /var/tmp/output.txt

          cat /var/tmp/output.txt

          echo 'plan<<EOF' >> $GITHUB_OUTPUT
          cat /var/tmp/output.txt >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Comment on PR with plan output
        if: ${{ steps.tf-plan.outputs.plan != '' }}
        uses: mshick/add-pr-comment@b8f338c590a895d50bcbfa6c5859251edc8952fc # v2.8.2
        with:
          message-id: ${{ matrix.component }}_plan
          message: |
            # ${{env.ENVIRONMENT}}/${{ matrix.component }} Terragrunt Plan:
            ```shell
            ${{join(steps.tf-plan.outputs.plan, '\n')}}
          
  terragrunt-plan-step-4:
    name: "${{ matrix.component }}"
    needs: 
      - terragrunt-plan-step-3
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        component: [eks, ses_validation_dns_entries, system_status_static_site]
        include:
          - component: eks
          - component: ses_validation_dns_entries
          - component: system_status_static_site
    env:
      COMPONENT: ${{ matrix.component }}
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      # Cache Terraform providers
      - name: Cache Terraform providers
        uses: actions/cache@v4
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: terraform-providers-${{ hashFiles('env/terragrunt.hcl', 'aws/**/.terraform.lock.hcl') }}
          restore-keys: |
            terraform-providers-

      # Cache Terragrunt dependencies
      - name: Cache Terragrunt cache  
        uses: actions/cache@v4
        with:
          path: |
            ~/.terragrunt-cache
            .terragrunt-cache
          key: terragrunt-cache-${{ github.sha }}-${{ matrix.component }}
          restore-keys: |
            terragrunt-cache-${{ github.sha }}-
            terragrunt-cache-
      
      - name: Setup Terraform
        uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      
      - name: Download TFVars
        run: |
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars

      - name: Terragrunt Plan

        id: tf-plan
        run: |
          cd env/${{env.ENVIRONMENT}}/${{ matrix.component }}
          terragrunt plan --terragrunt-non-interactive --no-color --log-custom-format "%msg" > /var/tmp/results.txt
          ${{ github.workspace }}/.github/scripts/extract_terraform_plan_enhanced.sh /var/tmp/results.txt -o /var/tmp/output.txt

          cat /var/tmp/output.txt

          echo 'plan<<EOF' >> $GITHUB_OUTPUT
          cat /var/tmp/output.txt >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Comment on PR with plan output
        if: ${{ steps.tf-plan.outputs.plan != '' }}
        uses: mshick/add-pr-comment@b8f338c590a895d50bcbfa6c5859251edc8952fc # v2.8.2
        with:
          message-id: ${{ matrix.component }}_plan
          message: |
            # ${{env.ENVIRONMENT}}/${{ matrix.component }} Terragrunt Plan:
            ```shell
            ${{join(steps.tf-plan.outputs.plan, '\n')}}

  terragrunt-aws-auth:
    name: "aws-auth"
    needs: 
      - terragrunt-plan-step-4
    runs-on: ubuntu-latest
    env:
      COMPONENT: aws-auth
    steps:

      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      # Cache Terraform providers
      - name: Cache Terraform providers
        uses: actions/cache@v4
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: terraform-providers-${{ hashFiles('env/terragrunt.hcl', 'aws/**/.terraform.lock.hcl') }}
          restore-keys: |
            terraform-providers-

      # Cache Terragrunt dependencies
      - name: Cache Terragrunt cache  
        uses: actions/cache@v4
        with:
          path: |
            ~/.terragrunt-cache
            .terragrunt-cache
          key: terragrunt-cache-${{ github.sha }}-${{ matrix.component }}
          restore-keys: |
            terragrunt-cache-${{ github.sha }}-
            terragrunt-cache-
      
      - name: Setup Terraform
        uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan

      - name: Install sponge
        run: |
          sudo apt update
          sudo apt-get install -y moreutils

      - name: Install OpenVPN
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved
          
      - name: Retrieve VPN Config
        run: |
          sudo mkdir -p aws
          cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars
          cd ../env/${{env.ENVIRONMENT}}/eks
          terragrunt init -upgrade
          ENDPOINT_ID=$(terragrunt output --raw gha_vpn_id)
          CERT=$(terragrunt output --raw gha_vpn_certificate)
          KEY=$(terragrunt output --raw gha_vpn_key)
          aws ec2 export-client-vpn-client-configuration --client-vpn-endpoint-id $ENDPOINT_ID --output text > /var/tmp/${{env.ENVIRONMENT}}.ovpn
          echo "<cert>
          $CERT
          </cert>" >> /var/tmp/${{env.ENVIRONMENT}}.ovpn
          echo "<key>
          $KEY
          </key>" >> /var/tmp/${{env.ENVIRONMENT}}.ovpn

      - name: Setup helmfile
        uses: ./.github/actions/setup-helmfile-wrapper

      - name: Connect to VPN
        uses: "kota65535/github-openvpn-connect-action@cd2ed8a90cc7b060dc4e001143e811b5f7ea0af5" # v3.1.0
        with:
          config_file: /var/tmp/${{env.ENVIRONMENT}}.ovpn
          echo_config: false            

      - name: Configure kubeconfig
        run: |
          aws eks update-kubeconfig --name notification-canada-ca-${{env.ENVIRONMENT}}-eks-cluster     
          kubectl config rename-context arn:aws:eks:ca-central-1:${{env.ACCOUNT_ID}}:cluster/notification-canada-ca-${{env.ENVIRONMENT}}-eks-cluster ${{env.ENVIRONMENT}}

      - name: Terragrunt Plan
        id: tf-plan
        run: |
          cd env/${{env.ENVIRONMENT}}/${{ env.COMPONENT }}
          terragrunt plan --terragrunt-non-interactive --no-color --log-custom-format "%msg" > /var/tmp/results.txt
          ${{ github.workspace }}/.github/scripts/extract_terraform_plan_enhanced.sh /var/tmp/results.txt -o /var/tmp/output.txt

          cat /var/tmp/output.txt

          echo 'plan<<EOF' >> $GITHUB_OUTPUT
          cat /var/tmp/output.txt >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Comment on PR with plan output
        if: ${{ steps.tf-plan.outputs.plan != '' }}
        uses: mshick/add-pr-comment@b8f338c590a895d50bcbfa6c5859251edc8952fc # v2.8.2
        with:
          message-id: aws_auth_plan
          message: |
            # ${{env.ENVIRONMENT}}/${{ matrix.component }} Terragrunt Plan:
            ```shell
            ${{join(steps.tf-plan.outputs.plan, '\n')}}
          
  terragrunt-plan-step-5:
    name: "${{ matrix.component }}"
    needs: 
      - terragrunt-plan-step-4
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        component: [elasticache, lambda-google-cidr, rds]
        include:
          - component: elasticache
          - component: lambda-google-cidr
          - component: rds
    env:
      COMPONENT: ${{ matrix.component }}
    steps:
      
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      # Cache Terraform providers
      - name: Cache Terraform providers
        uses: actions/cache@v4
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: terraform-providers-${{ hashFiles('env/terragrunt.hcl', 'aws/**/.terraform.lock.hcl') }}
          restore-keys: |
            terraform-providers-

      # Cache Terragrunt dependencies
      - name: Cache Terragrunt cache  
        uses: actions/cache@v4
        with:
          path: |
            ~/.terragrunt-cache
            .terragrunt-cache
          key: terragrunt-cache-${{ github.sha }}-${{ matrix.component }}
          restore-keys: |
            terragrunt-cache-${{ github.sha }}-
            terragrunt-cache-
      
      - name: Setup Terraform
        uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      
      - name: Download TFVars
        run: |
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars

      - name: Terragrunt Plan
        id: tf-plan
        run: |
          cd env/${{env.ENVIRONMENT}}/${{ matrix.component }}
          terragrunt plan --terragrunt-non-interactive --no-color --log-custom-format "%msg" > /var/tmp/results.txt
          ${{ github.workspace }}/.github/scripts/extract_terraform_plan_enhanced.sh /var/tmp/results.txt -o /var/tmp/output.txt

          cat /var/tmp/output.txt

          echo 'plan<<EOF' >> $GITHUB_OUTPUT
          cat /var/tmp/output.txt >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Comment on PR with plan output
        if: ${{ steps.tf-plan.outputs.plan != '' }}
        uses: mshick/add-pr-comment@b8f338c590a895d50bcbfa6c5859251edc8952fc # v2.8.2
        with:
          message-id: ${{ matrix.component }}_plan
          message: |
            # ${{env.ENVIRONMENT}}/${{ matrix.component }} Terragrunt Plan:
            ```shell
            ${{join(steps.tf-plan.outputs.plan, '\n')}}

  terragrunt-plan-step-6:
    name: "${{ matrix.component }}"
    needs: 
      - terragrunt-plan-step-5
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        component: [database-tools, lambda-admin-pr, lambda-api, manifest_secrets, system_status, performance-test]
        include:
          - component: database-tools
          - component: lambda-admin-pr
          - component: lambda-api
          - component: manifest_secrets
          - component: system_status
          - component: performance-test

    env:
      COMPONENT: ${{ matrix.component }}
    steps:

      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      # Cache Terraform providers
      - name: Cache Terraform providers
        uses: actions/cache@v4
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: terraform-providers-${{ hashFiles('env/terragrunt.hcl', 'aws/**/.terraform.lock.hcl') }}
          restore-keys: |
            terraform-providers-

      # Cache Terragrunt dependencies
      - name: Cache Terragrunt cache  
        uses: actions/cache@v4
        with:
          path: |
            ~/.terragrunt-cache
            .terragrunt-cache
          key: terragrunt-cache-${{ github.sha }}-${{ matrix.component }}
          restore-keys: |
            terragrunt-cache-${{ github.sha }}-
            terragrunt-cache-
      
      - name: Setup Terraform
        uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      
      - name: Download TFVars
        run: |
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars
      
      - name: Terragrunt Plan
        id: tf-plan
        run: |
          cd env/${{env.ENVIRONMENT}}/${{ matrix.component }}
          terragrunt plan --terragrunt-non-interactive --no-color --log-custom-format "%msg" > /var/tmp/results.txt
          ${{ github.workspace }}/.github/scripts/extract_terraform_plan_enhanced.sh /var/tmp/results.txt -o /var/tmp/output.txt

          cat /var/tmp/output.txt

          echo 'plan<<EOF' >> $GITHUB_OUTPUT
          cat /var/tmp/output.txt >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Comment on PR with plan output
        if: ${{ steps.tf-plan.outputs.plan != '' }}
        uses: mshick/add-pr-comment@b8f338c590a895d50bcbfa6c5859251edc8952fc # v2.8.2
        with:
          message-id: ${{ matrix.component }}_plan
          message: |
            # ${{env.ENVIRONMENT}}/${{ matrix.component }} Terragrunt Plan:
            ```shell
            ${{join(steps.tf-plan.outputs.plan, '\n')}}


  terragrunt-plan-step-7:
    name: "${{ matrix.component }}"
    needs: 
      - terragrunt-plan-step-6
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        component: [github]
        include:
          - component: github
    env:
      COMPONENT: ${{ matrix.component }}
    steps:      
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      # Cache Terraform providers
      - name: Cache Terraform providers
        uses: actions/cache@v4
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: terraform-providers-${{ hashFiles('env/terragrunt.hcl', 'aws/**/.terraform.lock.hcl') }}
          restore-keys: |
            terraform-providers-

      # Cache Terragrunt dependencies
      - name: Cache Terragrunt cache  
        uses: actions/cache@v4
        with:
          path: |
            ~/.terragrunt-cache
            .terragrunt-cache
          key: terragrunt-cache-${{ github.sha }}-${{ matrix.component }}
          restore-keys: |
            terragrunt-cache-${{ github.sha }}-
            terragrunt-cache-
      
      - name: Setup Terraform
        uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      
      - name: Download TFVars
        run: |
          sudo mkdir -p aws && cd aws
          op read op://ppnxsriom3alsxj4ogikyjxlzi/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars

      - name: Terragrunt Plan
        id: tf-plan
        run: |
          cd env/${{env.ENVIRONMENT}}/${{ matrix.component }}
          terragrunt plan --terragrunt-non-interactive --no-color --log-custom-format "%msg" > /var/tmp/results.txt
          ${{ github.workspace }}/.github/scripts/extract_terraform_plan_enhanced.sh /var/tmp/results.txt -o /var/tmp/output.txt

          cat /var/tmp/output.txt

          echo 'plan<<EOF' >> $GITHUB_OUTPUT
          cat /var/tmp/output.txt >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Comment on PR with plan output
        if: ${{ steps.tf-plan.outputs.plan != '' }}
        uses: mshick/add-pr-comment@b8f338c590a895d50bcbfa6c5859251edc8952fc # v2.8.2
        with:
          message-id: ${{ matrix.component }}_plan
          message: |
            # ${{env.ENVIRONMENT}}/${{ matrix.component }} Terragrunt Plan:
            ```shell
            ${{join(steps.tf-plan.outputs.plan, '\n')}}
            ```
