name: "Terragrunt Format and Validate - Staging"

env:
  ENVIRONMENT: staging
  ACCOUNT_ID: ${{ secrets.STAGING_AWS_ACCOUNT_ID }}
  AWS_REGION: ca-central-1
  OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN_STAGING }}
  WORKFLOW: true

on:
  workflow_dispatch:
  pull_request:
    paths:
      - ".env"
      - "aws/**"
      - "env/$ENVIRONMENT/**"
      - "env/terragrunt.hcl"
      - "env/*.tfvars"
      - ".github/workflows/terragrunt_plan_$ENVIRONMENT.yml"

permissions:
  id-token: write # This is required for requesting the OIDC JWT
  contents: write # This is required for actions/checkout
  pull-requests: write

jobs:
  terragrunt-format:
    name: Terragrunt Fmt & Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      - name: Free Disk Space
        run: |
          echo "Disk space before cleanup:"
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          echo "Disk space after cleanup:"
          df -h

      - name: Setup Terraform
        uses: ./.github/actions/setup-terraform
        with:
          role_to_assume: arn:aws:iam::${{env.ACCOUNT_ID}}:role/notification-terraform-plan
          role_session_name: NotifyTerraformPlan
      
      - name: Download TFVars
        run: |
          sudo mkdir -p aws && cd aws
          op read op://4eyyuwddp6w4vxlabrr2i2duxm/"TERRAFORM_SECRETS_${{env.ENVIRONMENT}}"/notesPlain > ${{env.ENVIRONMENT}}.tfvars
      
      - name: Setup Terraform Plugin Cache
        run: |
          mkdir -p $HOME/.terraform.d/plugin-cache
          echo "plugin_cache_dir = \"$HOME/.terraform.d/plugin-cache\"" > $HOME/.terraformrc
          echo "TF_PLUGIN_CACHE_DIR=$HOME/.terraform.d/plugin-cache" >> $GITHUB_ENV
      
      - name: Terragrunt Format
        id: tf-format
        run: |
          cd env/${{env.ENVIRONMENT}}
          terragrunt run-all fmt --check

      - name: Terragrunt Init and Validate
        id: tf-validate
        run: |
          cd env/${{env.ENVIRONMENT}}
          # Initialize all modules first to download providers and set up the .terragrunt-cache
          terragrunt run-all init --terragrunt-non-interactive
          # Now validate can work properly
          terragrunt run-all validate --terragrunt-non-interactive
