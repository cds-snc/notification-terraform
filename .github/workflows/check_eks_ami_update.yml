name: Check for EKS AMI updates
on:
  workflow_dispatch:
  schedule:
    - cron: "0 13 * * 1" # 1pm Monday UTC

env:
  AWS_DEFAULT_REGION: ca-central-1
  EKS_CLUSTER_NAME: notification-canada-ca-staging-eks-cluster
  EKS_CLUSTER_NODE_GROUP_NAME: notification-canada-ca-staging-eks-primary-node-group-k8s

jobs:
  check-eks-ami-update:
    runs-on: ubuntu-latest
    steps:

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@5fd3084fc36e372ff1fff382a39b10d03659f355 # v2.2.0
      with:
        aws-access-key-id: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_DEFAULT_REGION }}

    - name: Generate PR Bot Token
      uses: actions/create-github-app-token@v1
      id: generate-token
      with:
        app-id: ${{ secrets.NOTIFY_PR_BOT_APP_ID }}
        private-key: ${{ secrets.NOTIFY_PR_BOT_PRIVATE_KEY }}    

    - name: Checkout
      uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

    - name: Get latest AMI image release version
      id: latest
      run: |
        CLUSTER_VERSION="$(aws eks describe-cluster \
          --name ${{ env.EKS_CLUSTER_NAME }} \
          --query 'cluster.version' --output text)"
        LATEST_AMI="$(aws ssm get-parameter \
          --name /aws/service/eks/optimized-ami/$CLUSTER_VERSION/amazon-linux-2023/x86_64/standard/recommended/release_version \
          --query 'Parameter.Value' --output text)"
        echo "ami=${LATEST_AMI}" >> "$GITHUB_OUTPUT"


    - name: Get Staging cluster node group AMI image release version
      id: current
      run: |
        CURRENT_AMI="$(aws eks describe-nodegroup \
          --cluster-name ${{ env.EKS_CLUSTER_NAME }} \
          --nodegroup-name ${{ env.EKS_CLUSTER_NODE_GROUP_NAME }} \
          --query 'nodegroup.releaseVersion' --output text)"
        echo "ami=${CURRENT_AMI}" >> "$GITHUB_OUTPUT"


    - name: Patch Dev and Staging AMI
      if: steps.latest.outputs.ami != steps.current.outputs.ami
      #checkov:skip=CKV_GHA_3:This is an expected use of curl
      run: |
        # Modify dev and staging AMI patch
        pushd scripts
        ./patchK8sAmi.sh dev,staging ${{ steps.latest.outputs.ami }}
        popd
        git add ./env/dev_config.tfvars
        git add ./env/staging_config.tfvars

    - name: Create Dev and Staging Pull Request
      id: dev_staging_pr
      uses: peter-evans/create-pull-request@v7
      if: steps.latest.outputs.ami != steps.current.outputs.ami
      with:
        token: ${{ steps.generate-token.outputs.token }}
        commit-message: Dev and Staging EKS AMI patch
        title: Dev and Staging EKS AMI patch
        branch: dev-staging-eks-ami-${{ steps.latest.outputs.ami }}-${{ github.run_id }}
        body: |
          # Summary | Résumé
          Update the dev and staging EKS AMI version to ${{ steps.latest.outputs.ami }}

          ## Related Issues | Cartes liées

          * https://app.zenhub.com/workspaces/notify-planning-core-6411dfb7c95fb80014e0cab0/issues/gh/cds-snc/notification-planning-core/495

          ## Test instructions | Instructions pour tester la modification

          - [ ] Check that Terraform completes successfully.
          - [ ] Verify that all nodes are ready in staging 
          - [ ] Verify that Notify pods are all running in staging
          - [ ] Run a smoke test against staging
          - [ ] Verify the performance test results in staging the next day before merging the Prod PR.

          ## Release Instructions | Instructions pour le déploiement

          None.

          ## Reviewer checklist | Liste de vérification du réviseur

          * [ ] This PR does not break existing functionality.
          * [ ] This PR does not violate GCNotify's privacy policies.
          * [ ] This PR does not raise new security concerns. Refer to our GC Notify Risk Register document on our Google drive.
          * [ ] This PR does not significantly alter performance.
          * [ ] Additional required documentation resulting of these changes is covered (such as the README, setup instructions, a related ADR or the technical documentation).

          > ⚠ If boxes cannot be checked off before merging the PR, they should be moved to the "Release Instructions" section with appropriate steps required to verify before release. For example, changes to celery code may require tests on staging to verify that performance has not been affected.

    - name: Patch Prod AMI
      if: steps.latest.outputs.ami != steps.current.outputs.ami
      #checkov:skip=CKV_GHA_3:This is an expected use of curl
      run: |
        # Modify prod AMI patch
        git checkout main
        git pull origin main
        pushd scripts
        ./patchK8sAmi.sh production ${{ steps.latest.outputs.ami }}
        popd
        git add ./env/production_config.tfvars

    - name: Create Pull Request
      id: production_pr
      if: steps.latest.outputs.ami != steps.current.outputs.ami
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ steps.generate-token.outputs.token }}
        commit-message: Production EKS AMI patch
        title: Production EKS AMI patch
        branch: dev-staging-eks-ami-${{ steps.latest.outputs.ami }}-${{ github.run_id }}
        body: |
          # Summary | Résumé
          Update the production EKS AMI version to ${{ steps.latest.outputs.ami }}

          ## Related Issues | Cartes liées

          * https://app.zenhub.com/workspaces/notify-planning-core-6411dfb7c95fb80014e0cab0/issues/gh/cds-snc/notification-planning-core/495

          ## Test instructions | Instructions pour tester la modification

          - [ ] Verify that the dev and staging PR is merged first and working
          - [ ] Verify that all nodes are ready in production
          - [ ] Verify that Notify pods are all running in production
          - [ ] Run a smoke test against production

          ## Release Instructions | Instructions pour le déploiement

          None.

          ## Reviewer checklist | Liste de vérification du réviseur

          * [ ] This PR does not break existing functionality.
          * [ ] This PR does not violate GCNotify's privacy policies.
          * [ ] This PR does not raise new security concerns. Refer to our GC Notify Risk Register document on our Google drive.
          * [ ] This PR does not significantly alter performance.
          * [ ] Additional required documentation resulting of these changes is covered (such as the README, setup instructions, a related ADR or the technical documentation).

          > ⚠ If boxes cannot be checked off before merging the PR, they should be moved to the "Release Instructions" section with appropriate steps required to verify before release. For example, changes to celery code may require tests on staging to verify that performance has not been affected.

    - name: Post to slack
      if: steps.latest.outputs.ami != steps.current.outputs.ami
      #checkov:skip=CKV_GHA_3:This is an expected use of curl
      run: |
        json='{"blocks":[{"type":"section","text":{"type":"mrkdwn","text":":kubernetes: Kubernetes worker update available. Please review and merge the PRs: \n <${{steps.dev_staging_pr.outputs.pull-request-url}}|Staging PR> \n <${{steps.production_pr.outputs.pull-request-url}}|Production PR>"}}]}'
        curl -X POST -H 'Content-type: application/json' --data "$json" ${{ secrets.NOTIFY_DEV_SLACK_WEBHOOK }} 